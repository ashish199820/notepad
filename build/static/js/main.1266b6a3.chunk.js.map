{"version":3,"sources":["helper/getJWT.js","compoent/userPage.js","compoent/login.js","compoent/navbar.js","App.js","serviceWorker.js","index.js"],"names":["getJWT","localStorage","getItem","removeJWT","removeItem","UserPage","state","isValid","user","data","hidden","token","getNotes","jwt","console","log","props","history","push","axios","get","headers","then","res","setState","newNoteHandler","post","title","content","deleteHandler","e","id","preventDefault","ID","saveHandler","put","changeHandler","event","target","name","index","findIndex","_id","Changedvalue","value","logoutHandler","this","notes","map","key","className","onChange","placeholder","onClick","Component","Login","email","password","msg","isLogin","submitLoginHandler","error","setItem","submitRegisterHandler","toggleHandler","login","type","register","Navbar","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1266b6a3.chunk.js","sourcesContent":["\r\nexport const  getJWT=()=>{\r\n    return localStorage.getItem('auth-token');\r\n    \r\n}\r\nexport const removeJWT=()=>{\r\n    return localStorage.removeItem('auth-token');\r\n}","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport {getJWT,removeJWT} from '../helper/getJWT'\r\nclass UserPage extends Component {\r\n\r\n    state={\r\n        isValid:false,\r\n        user:null,\r\n        data:[],\r\n        hidden:true,\r\n        token:null\r\n    }\r\n\r\ncomponentDidMount(){\r\nthis.getNotes();\r\n\r\n}\r\n\r\ngetNotes=()=>{\r\n    const jwt = getJWT();\r\nconsole.log('this is the tokem',jwt)\r\nif(!jwt) \r\n    this.props.history.push('/')\r\naxios.get('notes/getNote',{headers:{'auth-token':jwt}})\r\n.then(res=>{\r\n    if(res.data.isValid===false) \r\n       this.props.history.push('/')\r\n    console.log(res.data)\r\n    this.setState({\r\n        user:res.data.user,\r\n        isValid:true,\r\n        data:res.data,\r\n        token:jwt\r\n    })\r\n})\r\n}\r\nnewNoteHandler=()=>{\r\n  axios.post('/notes/newNote',{\r\n     title:'',\r\n     content:'',\r\n     user:'this.state.user'\r\n  },{headers:{'auth-token':this.state.token}})\r\n  .then(res=>{\r\n    this.getNotes();\r\n  }\r\n      \r\n  )\r\n}\r\ndeleteHandler=(e,id)=>{\r\ne.preventDefault();\r\nconsole.log(id)\r\naxios.post('/notes/delete',{ID:id},{headers:{'auth-token':this.state.token}}).then(res=>{\r\n    console.log('deleted',res);\r\n    this.getNotes();\r\n})\r\n}\r\n\r\nsaveHandler=(e,ID,title,content)=>{\r\n  e.preventDefault();\r\n  console.log(ID)\r\naxios.put('/notes/editNote',{ID:ID,title:title,content:content},{headers:{'auth-token':this.state.token}}).then(res=>{\r\n    console.log('saved',res);\r\n    this.getNotes();\r\n})\r\n\r\n}\r\nchangeHandler=(event,id)=>{\r\n    console.log(event.target.name,id)\r\n    const index = this.state.data.findIndex(data=>data._id==id);\r\n    let Changedvalue = [...this.state.data];\r\n    Changedvalue[index][event.target.name]=event.target.value;\r\n    this.setState({\r\n        data:Changedvalue\r\n    })\r\n}\r\nlogoutHandler=()=>{\r\n  removeJWT();\r\n  this.props.history.push('/')\r\n}\r\n\r\n\r\n    render(){\r\n        \r\nconst notes =( this.state.data.map(data=>{\r\n    \r\n    return (\r\n         <div key={data._id} className=\"user\">\r\n             <div className=\"title\">\r\n        <textarea name='title' onChange={(event)=>this.changeHandler(event,data._id)}  value = {data.title} placeholder=\"New title\"/>\r\n             </div>\r\n             <div className=\"content\">\r\n             <textarea name='content' onChange={(event)=>this.changeHandler(event,data._id)} value = {data.content}  placeholder=\"New content\"/>\r\n             </div>\r\n        <button onClick={(e)=>this.deleteHandler(e,data._id)}>delete</button>\r\n        <button onClick={(e)=>this.saveHandler(e,data._id,data.title,data.content)}>save</button>\r\n         </div>\r\n            )\r\n          }));\r\n\r\n           if(!this.state.isValid){\r\n           return <h1>Loading...</h1>\r\n           }\r\n\r\n  return (\r\n      <div className=\"userpage\">\r\n          <div className=\"userbutton\">\r\n          <button onClick={this.newNoteHandler}> Add new note</button>\r\n          <button onClick={this.logoutHandler}> logout</button>\r\n          </div>\r\n\r\n        <div className=\"userposts\">\r\n        {notes}\r\n        </div>\r\n         \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserPage;","import React ,{Component} from 'react'\r\nimport axios from 'axios';\r\nclass Login extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        name:'',\r\n        msg:null,\r\n        isLogin:true\r\n    }\r\n\r\nsubmitLoginHandler=(event)=>{\r\n    event.preventDefault();\r\n    axios.post('/auth/login',{\r\n        email:this.state.email,\r\n        password:this.state.password\r\n    }).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.error)\r\n        {\r\n            this.setState({msg:res.data.error})\r\n        }\r\n      else  if(res.headers['auth-token']){\r\n            localStorage.setItem('auth-token',res.headers['auth-token'])\r\n            this.props.history.push('/user')\r\n        }\r\n       \r\n    })\r\n}\r\n\r\nsubmitRegisterHandler=(event)=>{\r\n        event.preventDefault();\r\n        axios.post('/auth/register',{\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            name:this.state.name\r\n        }).then(res=>{\r\n            if(res.data.error)\r\n            {\r\n                this.setState({\r\n                    msg:res.data.error\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLogin:true,\r\n                    msg:'successfully registered'\r\n                })\r\n            }\r\n        })\r\n}\r\nchangeHandler=(event)=>{\r\n    console.log(event.target.value);\r\nthis.setState({\r\n    [event.target.name]:event.target.value\r\n})\r\n}\r\n\r\ntoggleHandler=()=>{\r\n    console.log('clicked')\r\n    this.setState({\r\n        isLogin:!this.state.isLogin\r\n    })\r\n}\r\n    render(){\r\n      const login=(   <form className=\"form\">\r\n        <label>Email</label>\r\n        <input type=\"text\" name=\"email\" onChange={e=>this.changeHandler(e)} value={this.state.email} />\r\n        <label>Password</label>\r\n        <input type=\"text\" name =\"password\" onChange={e=>this.changeHandler(e)} value={this.state.password}/>\r\n         <button onClick={this.submitLoginHandler}>LOGIN</button>\r\n         <button onClick={this.toggleHandler}>Go to {this.state.isLogin?'Signup':'Login'}</button>\r\n\r\n    </form>)\r\n      const register =(\r\n        <form className=\"form\">\r\n        <label>Email</label>\r\n        <input type=\"text\" name=\"email\" onChange={e=>this.changeHandler(e)} value={this.state.email} />\r\n        <label>Name</label>\r\n        <input type=\"text\" name=\"name\" onChange={e=>this.changeHandler(e)} value={this.state.name} />\r\n        <label>Password</label>\r\n        <input type=\"text\" name =\"password\" onChange={e=>this.changeHandler(e)} value={this.state.password}/>\r\n         <button onClick={this.submitRegisterHandler}>Signup</button>\r\n         <button onClick={this.toggleHandler}>Go to {this.state.isLogin?'Signup':'Login'}</button>\r\n\r\n    </form>\r\n      )\r\n        return(\r\n            <div>\r\n          \r\n            { this.state.isLogin?login:register}\r\n            {this.state.msg&&<h4 className=\"error\">{this.state.msg}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\n const Navbar = (props)=>{\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n            <h2> Smart Notes</h2>\r\n        </div>\r\n    )\r\n }\r\n\r\n export default Navbar;","import React,{Component} from 'react';\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom'\nimport * as Icon from 'react-feather'\nimport './App.scss';\nimport UserPage from './compoent/userPage'\nimport Login from './compoent/login'\nimport Navbar from './compoent/navbar'\nclass App extends Component{\n\n  render(){\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <BrowserRouter >\n        <Switch>\n        <Route exact path='/' component={Login} />\n        <Route path='/user' component={UserPage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}